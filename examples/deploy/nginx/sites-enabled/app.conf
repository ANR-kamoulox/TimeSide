# mysite_nginx.conf

# Define connection details for connecting to a django app running in
# a docker container.
# the upstream component nginx needs to connect to
upstream app {
    #server unix:/opt/TimeSide/examples/sandbox/app.sock; # for a file socket
    server app:8000; # for a web port socket (we'll use this first)
    }

# configuration of the server
server {
    # the port your site will be served on, default_server indicates that this server block
    # is the block to use if no blocks match the server_name
    listen      80 default_server;

    # the domain name it will serve for
    server_name .example.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # Django media
    location /media  {
        alias /opt/TimeSide/examples/sandbox/media;  # your Django project's media files - amend as required
    }

    # Django static
    location /static {
        alias app:/var/www/static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        uwsgi_pass  app:8000;
        #include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed

 	# the uwsgi_params file you installed needs to be passed with each
	# request.
	# the uwsgi_params need to be passed with each uwsgi request
	uwsgi_param QUERY_STRING $query_string;
	uwsgi_param REQUEST_METHOD $request_method;
	uwsgi_param CONTENT_TYPE $content_type;
	uwsgi_param CONTENT_LENGTH $content_length;
	uwsgi_param REQUEST_URI $request_uri;
	uwsgi_param PATH_INFO $document_uri;
	uwsgi_param DOCUMENT_ROOT $document_root;
	uwsgi_param SERVER_PROTOCOL $server_protocol;
	uwsgi_param HTTPS $https if_not_empty;
	uwsgi_param REMOTE_ADDR $remote_addr;
	uwsgi_param REMOTE_PORT $remote_port;
	uwsgi_param SERVER_PORT $server_port;
	uwsgi_param SERVER_NAME $server_name;


        }
    }
